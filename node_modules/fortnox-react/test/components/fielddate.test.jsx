import React from 'react';
import TestUtils from 'react-dom/test-utils';
import Backbone from 'utils/BackboneAdapter';
import 'utils/AjaxStub'
import FieldDate from 'form/Date';

describe('Form FieldDate', () => {

	it('should not run validation on undefined start value', done => {
		const Car = Backbone.Model.extend({
			validators:{
				startDate:function(value){
					return 'Fel';
				}
			}
		});
		const p = new Car({ startDate: undefined });
		const component = TestUtils.renderIntoDocument(
			<FieldDate model={p} modelProp="startDate" validator="startDate" />
		);

		const input = TestUtils.findRenderedDOMComponentWithTag(component, 'input');

		TestUtils.Simulate.click(input);
		TestUtils.Simulate.blur(input);

		component.state.isValid.should.be.false();

		done();
	});


	it('Should format dates correctly after inputting a bad one', done => {
		const model = new Backbone.Model({ startDate: '20180101' });
		const component = TestUtils.renderIntoDocument(
			<FieldDate model={model} modelProp="startDate" validator="startDate" />
		);

		const input = TestUtils.findRenderedDOMComponentWithTag(component, 'input');

		input.value = '15150101';

		TestUtils.Simulate.change(input);
		TestUtils.Simulate.blur(input);

		input.value.should.equal('1515-01-01');

		input.value = '150101';

		TestUtils.Simulate.change(input);
		TestUtils.Simulate.blur(input);

		input.value.should.equal('2015-01-01');
		model.get('startDate').should.equal('2015-01-01');
		done();

	});


});
