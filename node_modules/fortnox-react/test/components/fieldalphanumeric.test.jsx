import React from 'react';
import ReactDOM from 'react-dom';
import TestUtils from 'react-dom/test-utils';
import Backbone from 'utils/BackboneAdapter';
import 'utils/AjaxStub'

import FieldText from 'form/TextBox';
import FieldAlphanumeric from 'form/AlphaNumeric';

describe('Form FieldAlphanumeric', () => {

	it('Correctly validates AlphaNumeric Input and sets correct class', done => {
		const p = new Backbone.Model({ name: 'Rutger' });
		const component = TestUtils.renderIntoDocument(
			<FieldAlphanumeric model={p} modelProp="foo" />
		);
		const input = TestUtils.findRenderedDOMComponentWithTag(component, 'input');

		TestUtils.findRenderedComponentWithType(component, FieldText).state.isValid.should.be.true();

		input.value = 'Invalid..__-- string';

		TestUtils.Simulate.change(ReactDOM.findDOMNode(input));
		TestUtils.Simulate.blur(ReactDOM.findDOMNode(input));

		TestUtils.findRenderedComponentWithType(component, FieldText).state.isValid.should.be.false();

		input.className.should.equal(' textfield missing-invalid');

		input.value = 'A';

		TestUtils.Simulate.change(ReactDOM.findDOMNode(input));
		TestUtils.Simulate.blur(ReactDOM.findDOMNode(input));

		TestUtils.findRenderedComponentWithType(component, FieldText).state.isValid.should.be.true();
		input.className.should.equal(' textfield ');

		done();

	});

});
