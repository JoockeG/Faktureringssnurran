import React from 'react';
import TestUtils from 'react-dom/test-utils';
import Backbone from 'utils/BackboneAdapter';
import should from 'should';
import ReactDOM from 'react-dom';

import FieldTextarea from 'form/TextArea';

import 'utils/AjaxStub'

describe('Form FieldTextarea', () => {
	it('Properly handles 2-way databinding', (done) => {
		const m = new Backbone.Model();
		const component = TestUtils.renderIntoDocument(
			<FieldTextarea model={m} modelProp="testKey" className="textarea-class" />
		);
		const textarea = TestUtils.findRenderedDOMComponentWithTag(component, 'textarea');
		const instance = TestUtils.findRenderedComponentWithType(component, FieldTextarea);
		should.not.exist(instance.state.value);
		m.set('testKey', 'some value');
		instance.state.value.should.equal('some value');
		textarea.value.should.equal('some value');
		done();
	});

	it('Should clear the field when clearing the model prop', (done) => {
		const m = new Backbone.Model({ airplane: 'Boeing 747' });
		const component = TestUtils.renderIntoDocument(
			<FieldTextarea model={m} modelProp="airplane" />
		);
		const textarea = TestUtils.findRenderedDOMComponentWithTag(component, 'textarea');
		textarea.value.should.equal('Boeing 747');

		m.set('airplane', null);

		textarea.value.should.equal('');
		done();
	});

	it('Supports tooltips', (done) => {
		const m = new Backbone.Model({ airplane: 'Boeing 747' });

		const component = TestUtils.renderIntoDocument(
			<FieldTextarea
				modelProp="airplane"
				tooltip="pilot"
				model={m}
			/>
		);
		TestUtils.scryRenderedDOMComponentsWithClass(component, 'hint').length.should.equal(1);
		done();
	});

	it('Should show tooltip when required and empty', (done) => {
		const m = new Backbone.Model({ airplane: '' });

		const component = TestUtils.renderIntoDocument(
			<FieldTextarea
				modelProp="airplane"
				model={m}
				required={Boolean(true)}
			/>
		);
		const textarea = TestUtils.findRenderedDOMComponentWithTag(component, 'textarea');
		TestUtils.Simulate.blur(ReactDOM.findDOMNode(textarea));
		TestUtils.scryRenderedDOMComponentsWithClass(component, 'hint').length.should.equal(1);
		done();
	});
});
