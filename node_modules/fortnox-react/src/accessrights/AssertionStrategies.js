export default (necessaryRights) => {
	const isPromise = (necessaryRights instanceof Promise);
	const isArray = (Array.isArray(necessaryRights));
	const isString = typeof (necessaryRights) === 'string';
	const isFunction = typeof (necessaryRights) === 'function';
	const strategies = [
		{
			onMatch: isPromise,
			fn() {
				necessaryRights.then(() => this.setAssertedState(true))
					.catch(() => this.setAssertedState(false));
			}
		},
		{
			onMatch: isArray,
			fn() {
				this.setAssertedState(this.rights.hasAll(necessaryRights));
			}
		},
		{
			onMatch: isString,
			fn() {
				this.setAssertedState(this.rights.has(necessaryRights));
			}
		},
		{
			onMatch: isFunction,
			fn() {
				this.setAssertedState(this.props.assert(this.rights));
			}
		}
	];

	return strategies.find(strategy => strategy.onMatch).fn;
};
