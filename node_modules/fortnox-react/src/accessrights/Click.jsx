import React from 'react';
import PropTypes from 'prop-types';
import accessRightsDecorator from './Decorator';

class AccessClick extends React.Component {

	componentDidMount() {
		this.props.assertAccessState(this.props.assert);
	}

	shouldCaptureClick() {
		return !this.props.assertion;
	}

	handleClick(e) {
		if (!this.shouldCaptureClick()) {
			return;
		}
		this.props.onAccessFail();
		e.stopPropagation();
	}

	render() {
		return <span onClickCapture={this.handleClick.bind(this)}>{this.props.children}</span>;
	}

}

AccessClick.propTypes = {
	assert: PropTypes.oneOfType([
		PropTypes.func,
		PropTypes.array,
		PropTypes.string,
		PropTypes.instanceOf(Promise)
	]).isRequired,
	children: PropTypes.node.isRequired,
	onAccessFail: PropTypes.func.isRequired,
	assertion: PropTypes.bool.isRequired,
	assertAccessState: PropTypes.func.isRequired
};

AccessClick.defaultProps = {
	onAccessFail() { return null; },
	assert() { return false; }
};


export default accessRightsDecorator(AccessClick);
