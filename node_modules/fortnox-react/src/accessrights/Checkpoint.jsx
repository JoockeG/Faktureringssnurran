import React, { Component } from 'react';
import PropTypes from 'prop-types';
import Content from '../view/ViewContent';
import decorator from './Decorator';
import { t as gettext } from 'c-3po';

/**
 * Renders the child nodes only if the assertion passes.
 */
class Checkpoint extends Component {
	/**
	 * Figures out permissions using assertion strategies.
	 */
	componentDidMount() {
		this.props.assertAccessState(this.props.assert);
	}

	/**
	 * Renders a message, used if the assertion fails.
	 */
	renderMessage() {
		return (
			<Content>
				<h2>{gettext `Åtkomst nekad`}</h2>
				<p>{this.props.deniedMessage}</p>
			</Content>
		);
	}

	/**
	 * Renders the children, used if the assertion passes.
	 */
	renderChildren() {
		return (
			<div className="checkpoint">
				{ this.props.children }
			</div>
		);
	}

	/**
	 * Renders either the child nodes, or an error message.
	 */
	render() {
		if (!this.props.assertion) {
			return this.renderMessage();
		}

		return this.renderChildren();
	}
}

Checkpoint.propTypes = {
	assert: PropTypes.oneOfType([
		PropTypes.func,
		PropTypes.array,
		PropTypes.string,
		PropTypes.instanceOf(Promise)
	]).isRequired,
	assertAccessState: PropTypes.func.isRequired,
	assertion: PropTypes.bool.isRequired,
	children: PropTypes.node.isRequired,
	deniedMessage: PropTypes.string
};

Checkpoint.defaultProps = {
	deniedMessage: gettext`Kontakta din systemadministratör.`
};

export default decorator(Checkpoint);
