import React from 'react';
import PropTypes from 'prop-types';
import customPropTypes from './PropValidation';

/**
 * ActionMessage Component
 * Renders an action message based on type and text
 *
 * @class
 * @name ActionMessage
 *
 * @return {ActionMessage} An instance of the ActionMessage component.
 */
class ActionMessage extends React.Component {
	constructor(props) {
		super(props);
		this.state = {
			display: 'block'
		};
	}

	/**
	 * @memberOf ActionMessage
	 * @private
	 *
	 * @description
	 * Only rerender if display or props change
	 *
	 * @param {Object} nextProps
	 * @param {Object} nextState
	 *
	 * @return {Boolean}
	 */
	shouldComponentUpdate(nextProps, nextState) {
		return this.state.display !== nextState.display || this.props !== nextProps;
	}

	/**
	 * @memberOf ActionMessage
	 * @private
	 *
	 * @description
	 * When the user clicks on the close (X), hide the message.
	 * It will automatically be removed by the parent
	 *
	 * @returns {undefined}
	 */
	handleClick() {
		this.props.onUserClose(this.props.model);
	}

	/**
	 * @memberOf ActionMessage
	 * @private
	 *
	 * @description
	 * Render the action message
	 *
	 * @return {Object}
	 */
	render() {
		return (
			<div className={`message ${this.props.type.color}`} style={{ opacity: 1, bottom: this.props.posBottom, display: this.state.display }} >
				<div className="message-icon-container">
					<div className={this.props.type.icon} />
				</div>
				<div className="message-content">
					{this.props.text}
					<div className="fa fa-remove message-hide" onClick={this.handleClick.bind(this)} />
				</div>
			</div>
		);
	}
}


ActionMessage.propTypes = {
	onUserClose: PropTypes.func.isRequired,
	posBottom: PropTypes.number.isRequired,
	type: PropTypes.object.isRequired,
	text: PropTypes.string.isRequired,
	model: customPropTypes.model.isRequired
};

ActionMessage.defaultProps = {
	type: {
		icon: 'fa fa-exclamation-circle message-icon',
		color: 'message-type-error'
	}
};


export default ActionMessage;
