/**
 * Check if the given character is present in format.
 *
 * @param {String} format - String to look in.
 * @param {String} c - Character to look for.
 * @return {Boolean} true if match found, otherwise false.
 */
const isActiveCharacter = (format, c) => !!format.match(c);


/**
 * Check if date is valid (between 1 and 31) and relevant to the format.
 *
 * @param {String} format - Format to look in.
 * @param {Number} date - Date number.
 * @return {Boolean} true if valid, otherwise false.
 */
const isValidDate = (format, date) => {
	if (!isActiveCharacter(format, 'D')) { return true; }
	return date && date > 0 && date <= 31;
};


/**
 * Check if month is valid (between 1 and 12) and relevant to the format.
 *
 * @param {String} format - Format to look in.
 * @param {Number} month - Month number.
 * @return {Boolean} true if valid, otherwise false.
 */
const isValidMonth = (format, month) => {
	if (!isActiveCharacter(format, 'M')) { return true; }
	return month && month > 0 && month <= 12;
};


/**
 * Check if year is valid (inside an offset of 1000 years from the given
 * now) and relevant to the format.
 *
 * @param {String} format - Format to look in.
 * @param {Number} year - Year number.
 * @param {Object} now - Moment.js instance.
 * @return {Boolean} true if valid, otherwise false.
 */
const isValidYear = (format, year, now) => {
	if (!isActiveCharacter(format, 'Y')) { return true; }
	return year && year <= now.year() + 1000 && year >= now.year() - 1000;
};

export { isValidDate, isValidMonth, isValidYear };
