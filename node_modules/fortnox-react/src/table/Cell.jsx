import React from 'react';
import PropTypes from 'prop-types';

class Cell extends React.Component {

	/**
	 * @memberOf Cell
	 * @private
	 *
	 * @description
	 * Determine if we need to rerender
	 *
	 * @param {Object} nextProps
	 *
	 * @return {Boolean}
	 */
	shouldComponentUpdate(nextProps) {
		return this.props !== nextProps;
	}

	/**
	 * @memberOf Cell
	 * @private
	 *
	 * @description
	 * Determine wether we should hide the overflow of the cell
	 *
	 * @return {Boolean}
	 */
	shouldHideOverflow() {
		return this.props.overflow === 'hidden';
	}

	/**
	 * @memberOf Cell
	 * @private
	 *
	 * @description
	 * Generate a list of css classes
	 *
	 * @return {String}
	 */
	getCSSClasses() {
		return [
			'field-cell',
			this.shouldHideOverflow() ? 'field-cell-overflow' : ''
		].join(' ');
	}

	/**
	 * @memberOf Cell
	 * @private
	 *
	 * @description
	 * Render a <td> cell
	 *
	 * @return {Object} React Elements
	 */
	render() {
		return <td className={this.getCSSClasses()}>{this.props.children}</td>;
	}

}

Cell.defaultProps = {
	overflow: 'visible'
};

Cell.propTypes = {
	overflow: PropTypes.string,
	children: PropTypes.node.isRequired
};

export default Cell;
