import React from 'react';
import PropTypes from 'prop-types';

class TagContainer extends React.Component {

	/**
	 * @memberOf TagContainer
	 * @private
	 *
	 * @description
	 * Set offsetWidth in parent which triggers a rerender, since we calculate
	 * the number of visible tags based on the available width in pixels.
	 *
	 * @returns {undefined}
	 */
	componentDidMount() {
		this.props.setOffsetWidth(this.container.offsetWidth);
	}

	render() {
		return (
			<div
				onKeyDown={this.props.onKeyDown}
				ref={(el) => { this.container = el; }}
				className={this.props.className}
				style={{ width: this.props.width }}
			>
				{this.props.children}
			</div>
		);
	}

}

TagContainer.propTypes = {
	children: PropTypes.node.isRequired,
	setOffsetWidth: PropTypes.func.isRequired,
	width: PropTypes.oneOfType([
		PropTypes.number,
		PropTypes.string
	]).isRequired,
	onKeyDown: PropTypes.func.isRequired,
	className: PropTypes.string.isRequired
};

export default TagContainer;
