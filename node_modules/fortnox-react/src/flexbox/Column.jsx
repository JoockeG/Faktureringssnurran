import React from 'react';
import PropTypes from 'prop-types';

/**
 * The React Column component.
 *
 *
 * @class
 * @name Column
 *
 * @return {Column} An instance of the Column component.
 */
class Column extends React.Component {

	/**
	 * @private
	 * @memberOf Column
	 *
	 * @description
	 * Whenever we set a fixed or % based width, set the flex-basis property.
	 * When used properly inside rows this gives absolute freedom.
	 *
	 * The flex property takes 3 arguments in CSS
	 * flex: grow shrink basis
	 * Translates to: auto-grow, auto-shrink and width in % or pixels
	 *
	 * @return {Object}
	 */
	getFlexBasis() {
		return this.props.hasOwnProperty('width') ? {
			WebkitFlex: `0 0 ${this.props.width}px`,
			flex: `0 0 ${this.props.width}px`
		} : {};
	}

	/**
	 * @private
	 * @memberOf Column
	 *
	 * @description
	 * Render the Column div with children
	 *
	 * @return {Object} - React internals
	 */
	render() {
		return (
			<div
				style={this.getFlexBasis()}
				className={`col-span-${this.props.size} ${this.props.className}`}
			>
				{this.props.children}
			</div>
		);
	}

}

Column.defaultProps = {
	className: '',
	children: null,
	width: null,
	size: 1
};

Column.propTypes = {
	size: PropTypes.oneOfType([
		PropTypes.string,
		PropTypes.number
	]).isRequired,
	width: PropTypes.oneOfType([
		PropTypes.string,
		PropTypes.number
	]),
	className: PropTypes.string,
	children: PropTypes.node
};

export default Column;
