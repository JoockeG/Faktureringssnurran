import React from 'react';
import PropTypes from 'prop-types';

/**
 * The React Toggle component.
 *
 *
 * @class
 * @name Toggle
 *
 * @return {Toggle}
 */
class Toggle extends React.Component {

	/**
	 * @memberOf Toggle
	 * @private
	 *
	 * @description
	 * CSS Class that determines wether to show toggled status or not
	 * Determine if we need to show a tooltip or not
	 *
	 * @return {String}
	 *
	 */
	getCSSClasses() {
		return [
			'toggle',
			this.props.isToggled ? 'toggle-active' : '',
			this.props.disabled ? 'toggle-disabled' : '',
			this.props.tooltip ? (`hint hint--${this.props.tooltipAlign}`) : ''
		].join(' ');
	}

	/**
	 * @memberOf Toggle
	 * @private
	 *
	 * @description
	 * Call the parent Click handler with the value
	 *
	 * @returns {undefined}
	 */
	handleClick() {
		if (this.props.disabled) {return;}
		this.props.onClick(this.props.value);
	}

	/**
	 * @memberOf Toggle
	 * @private
	 *
	 * @description
	 * Render a Button that will act as our "Toggle" ui
	 *
	 * @returns {Object} React Elements
	 */
	render() {
		return (
			<div className={this.getCSSClasses()} onClick={this.handleClick.bind(this)} data-hint={this.props.tooltip}>
				<div className="circle" /> {this.props.children}
			</div>
		);
	}

}

Toggle.defaultProps = {
	onClick() { return null; },
	disabled: false,
	tooltip: null,
	tooltipAlign: 'top'
};

Toggle.propTypes = {
	isToggled: PropTypes.bool,
	onClick: PropTypes.func,
	disabled: PropTypes.bool.isRequired,
	tooltip: PropTypes.string,
	tooltipAlign: PropTypes.string,
	value: PropTypes.oneOfType([
		PropTypes.string,
		PropTypes.number,
		PropTypes.bool
	])
};

export default Toggle;
