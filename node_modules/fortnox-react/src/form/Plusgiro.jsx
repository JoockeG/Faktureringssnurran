import React from 'react';
import { t as gettext } from 'c-3po';
import TextBox from './TextBox';
import luhnCheck from '../validations/LuhnCheck';
import { hasInvalidChars, hasInvalidLength } from '../validations/Plusgiro';

/**
 * The React FormFieldPlusgiro component.
 *
 *
 * @class
 * @name FormFieldPlusgiro
 *
 * @return {FormFieldPlusgiro} An instance of the FormFieldPlusgiro component.
 */
class FieldPlusgiro extends React.Component {

	/**
	 * @private
	 * @memberOf FormFieldPlusgiro
	 *
	 * @description
	 *
	 * Strip away whitespace and dash
	 *
	 * @param {String} value - input value
	 *
	 * @return {String|Boolean}
	 */
	stripChars(value) {
		if (value === null) {
			return '';
		}

		return value.replace(/[\-\s]/g, '');
	}

	/**
	 * @private
	 * @memberOf FormFieldPlusgiro
	 *
	 * @description
	 *
	 * Run all three validations, if one fails return
	 * the first failed validation in form of the message.
	 *
	 * @param {String} value - input value
	 *
	 * @return {String|Boolean}
	 */
	validate(value) {
		const ccnumber = this.stripChars(value);
		const isValid = [
			hasInvalidChars(ccnumber)
				? gettext`Plusgironummer innehåller ogiltiga tecken, endast 0-9 och - är tillåtna.`
				: true,

			hasInvalidLength(ccnumber)
				? gettext`Plusgironummer måste innehålla 2 till 8 siffror.`
				: true,

			luhnCheck(ccnumber)
				? gettext`Plusgironummer innehåller en felaktig kontrollsiffra.`
				: true

		].filter(res => res !== true);

		return isValid.length === 0 ? true : isValid[0];
	}

	render() {
		return (
			<TextBox
				{...this.props}
				validate={this.validate.bind(this)}
			/>
		);
	}

}

export default FieldPlusgiro;
