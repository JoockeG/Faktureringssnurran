import React from 'react';
import TextBox from './TextBox';
import luhnCheck from '../validations/LuhnCheck';
import { hasInvalidChars, hasInvalidLength } from '../validations/Bankgiro';

/**
 * The React FieldBankgiro component.
 *
 *
 * @class
 * @name FieldBankgiro
 *
 * @return {FieldBankgiro} An instance of the FieldBankgiro component.
 */
class FieldBankgiro extends React.Component {

	/**
	 * @private
	 * @memberOf FieldBankgiro
	 *
	 * @description
	 *
	 * Strip away whitespace and dash
	 *
	 * @param {String} value - input value
	 *
	 * @return {String|Boolean}
	 */
	stripChars(value) {
		if (value === null) {
			return '';
		}

		return value.replace(/[\-\s]/g, '');
	}

	/**
	 * @private
	 * @memberOf FieldBankgiro
	 *
	 * @description
	 *
	 * Run all three validations, if one fails return
	 * the first failed validation in form of the message.
	 *
	 * @param {String} value - input value
	 *
	 * @return {String|Boolean}
	 */
	validate(value) {
		const ccnumber = this.stripChars(value);
		const isValid = [
			hasInvalidChars(ccnumber) ? 'Bankgironummer innehåller ogiltiga tecken, endast 0-9 och - är tillåtna.' : true,
			hasInvalidLength(ccnumber) ? 'Bankgironummer måste innehålla 7 eller 8 siffror.' : true,
			luhnCheck(ccnumber) ? 'Bankgironummer innehåller en felaktig kontrollsiffra.' : true
		].filter(res => res !== true);

		return isValid.length === 0 ? true : isValid[0];
	}

	render() {
		return (<TextBox
			{...this.props}
			validate={this.validate.bind(this)}
		/>);
	}
}

export default FieldBankgiro;
