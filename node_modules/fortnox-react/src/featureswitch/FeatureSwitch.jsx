import React, { Fragment } from 'react';
import PropTypes from 'prop-types';

class FeatureSwitch extends React.Component {
	constructor(props) {
		super(props);

		this.state = {
			hasFeature: false
		};
	}

	componentWillMount() {
		let hasFeature = false;
		if (this.props.featuresStorage) {
			const features = JSON.parse(this.props.featuresStorage);
			hasFeature     = features.indexOf(this.props.feature) >= 0;
		}

		this.setState({
			hasFeature: hasFeature
		});
	}

	render() {
		if (!this.state.hasFeature) {
			return null;
		}
		return (
			<Fragment>{this.props.children}</Fragment>
		);
	}
}


FeatureSwitch.defaultProps = {
	featuresStorage: window.sessionStorage.features
};


FeatureSwitch.propTypes = {
	children: PropTypes.node.isRequired,
	feature: PropTypes.string.isRequired,
	featuresStorage: PropTypes.string
};

export default FeatureSwitch;
