import React from 'react';
import PropTypes from 'prop-types';
import AutocompleteTableCell from './Cell';
import customPropTypes from '../utils/PropValidation';

class AutocompleteTableRow extends React.Component {

	/**
	 * @memberOf AutocompleteTableRow
	 * @private
	 *
	 * @description
	 * Handle Click on the Row, indicate that its selected by
	 * calling method in props / parent context
	 *
	 * @returns {undefined}
	 */
	handleClick() {
		this.props.setSelected(this.props.rowIndex);
	}

	/**
	 * @memberOf AutocompleteTableRow
	 * @private
	 *
	 * @description
	 * When we mouse over a Row, mark it as selected since
	 * pressing Enter/Tab here would select the actual Row.
	 * Calls method in props / parent context
	 *
	 * @returns {undefined}
	 */
	handleMouseOver() {
		this.props.onMouseOverRow(this.props.rowIndex);
	}

	/**
	 * @memberOf AutocompleteTableRow
	 * @private
	 *
	 * @description
	 * Generate a list of cells to render
	 *
	 * @return {Array}
	 *
	 */
	getCells() {
		return React.Children.map(this.props.children, child =>
			<AutocompleteTableCell isActive={this.props.isActive}>
				{this.props.model.get(child.props.modelProp)}
			</AutocompleteTableCell>);
	}

	/**
	 * @memberOf AutocompleteTableRow
	 * @private
	 *
	 * @description
	 * Render the table Row
	 *
	 * @return {Object}
	 *
	 */
	render() {
		return (
			<tr
				onClick={this.handleClick.bind(this)}
				onMouseOver={this.handleMouseOver.bind(this)}
			>{this.getCells()}</tr>
		);
	}

}

AutocompleteTableRow.propTypes = {
	setSelected: PropTypes.func.isRequired,
	onMouseOverRow: PropTypes.func.isRequired,
	rowIndex: PropTypes.number.isRequired,
	isActive: PropTypes.bool.isRequired,
	model: customPropTypes.model.isRequired,
	children: PropTypes.node.isRequired
};

export default AutocompleteTableRow;
