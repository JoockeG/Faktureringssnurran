import React from 'react';
import PropTypes from 'prop-types';
import AutocompleteTableBody from './Body';
import AutocompleteTableHead from './Head';
import { ViewSpinner as Spinner } from '../view';
import customPropTypes from '../utils/PropValidation';

const AutoCompleteSpinner = () => (
	<tbody>
		<tr>
			<td className="autocomplete-spinner" colSpan={999}> <Spinner isActive /> </td>
		</tr>
	</tbody>
);


class AutocompleteTable extends React.Component {

	/**
	 * @memberOf AutocompleteTable
	 * @private
	 *
	 * @description
	 * Generate style of the Table
	 *
	 * @return {Object}
	 */
	getStyle() {
		return {
			minWidth: this.props.minWidth,
			display: this.props.isVisible ? 'table' : 'none'
		};
	}

	getContent() {
		const content = this.props.isProcessing ? <AutoCompleteSpinner /> : (
			<AutocompleteTableBody
				setSelected={this.props.onUserSelect}
				onMouseOverRow={this.props.onMouseOverRow}
				activeRowIndex={this.props.activeRowIndex}
				maxResults={this.props.maxResults}
				collection={this.props.collection}
			>
				{this.props.children}
			</AutocompleteTableBody>
		);

		return content;
	}

	/**
	 * @memberOf AutocompleteTable
	 * @private
	 *
	 * @description
	 * Render the Table Head, Body and its rows
	 *
	 * @return {Object}
	 */
	render() {
		return (
			<table className="table table-bordered rowsize-small" style={this.getStyle()}>
				<AutocompleteTableHead>{this.props.children}</AutocompleteTableHead>
				{this.getContent()}
			</table>
		);
	}

}

AutocompleteTable.propTypes = {
	onUserSelect: PropTypes.func,
	minWidth: PropTypes.number,
	isVisible: PropTypes.bool,
	onMouseOverRow: PropTypes.func,
	activeRowIndex: PropTypes.number,
	collection: customPropTypes.collection,
	maxResults: PropTypes.number,
	isProcessing: PropTypes.bool,
	children: PropTypes.node
};

export default AutocompleteTable;
